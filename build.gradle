plugins {
    id 'java'
    id 'checkstyle'
}

group = 'com.lmax'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

checkstyle {
    toolVersion = '10.4'
    configFile = file('config/checkstyle/checkstyle.xml')
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly

    testSupportImplementation.extendsFrom testImplementation
    testSupportRuntimeOnly.extendsFrom testRuntimeOnly
}

sourceSets {
    testSupport {
        java {
            compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
            runtimeClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
            srcDir file('src/test-support/java')
        }
        resources.srcDir file('src/test-support/resources')
    }
    test {
        java {
            compileClasspath += sourceSets.main.output + sourceSets.testSupport.output
            runtimeClasspath += sourceSets.main.output + sourceSets.testSupport.output
            srcDir file('src/test/java')
        }
        resources.srcDir file('src/test/resources')
    }
    integrationTest {
        java {
            compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath + sourceSets.testSupport.output
            runtimeClasspath += sourceSets.main.output + configurations.testRuntimeClasspath + sourceSets.testSupport.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

dependencies {
    checkstyle 'com.puppycrawl.tools:checkstyle:10.4'
    // dependencies
    implementation 'org.bitcoinj:bitcoinj-core:0.15.10'
    implementation 'net.i2p.crypto:eddsa:0.3.0'

    // test support dependencies
    testSupportImplementation 'org.testcontainers:testcontainers:1.19.8'
    testSupportImplementation 'com.lmax:simple-dsl:3.0.0'
    testSupportImplementation 'org.assertj:assertj-core:3.25.3'
    testSupportImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testSupportImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.2'
    testSupportImplementation 'com.fasterxml.jackson.core:jackson-core:2.17.1'
    testSupportImplementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
    testSupportImplementation 'org.apache.httpcomponents:httpclient:4.5.14'
    testSupportImplementation 'org.bouncycastle:bcprov-jdk18on:1.78.1'

    // test dependencies
    testImplementation 'org.assertj:assertj-core:3.25.3'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.2'
    testImplementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.23.1'
    testImplementation 'org.slf4j:slf4j-api:2.0.13'

    // integration test dependencies
    integrationTestImplementation 'org.testcontainers:testcontainers:1.19.8'
    integrationTestImplementation 'com.lmax:simple-dsl:3.0.0'
    integrationTestImplementation 'org.assertj:assertj-core:3.25.3'
    integrationTestImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    integrationTestImplementation 'com.fasterxml.jackson.core:jackson-core:2.17.1'
    integrationTestImplementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
    integrationTestImplementation 'org.apache.httpcomponents:httpclient:4.5.14'
    integrationTestImplementation 'org.bouncycastle:bcprov-jdk18on:1.78.1'
    integrationTestImplementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.23.1'
    integrationTestImplementation 'org.slf4j:slf4j-api:2.0.13'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task integrationTest(type: Test) {
    useJUnitPlatform()
    description = 'runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath + sourceSets.testSupport.runtimeClasspath
    shouldRunAfter test
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showExceptions true
        showCauses true
        showStackTraces true
    }
}

tasks.processTestResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

javadoc {
    title = 'solana4j'

    options.addStringOption('XDignore.symbol.file', '-quiet')
    options.author = true
    options.bottom = "<i>Copyright &#169; 2011 - ${Calendar.instance[Calendar.YEAR]} LMAX Ltd. All Rights Reserved.</i>"
    options.use = true
    options.version = true
    options.showFromPublic()
}

task setUpGitHooks(type: Exec, description: 'Add a pre-commit git hook that runs gradle check & test tasks') {
    def hooksFolder = file('.githooks').getAbsolutePath()
    commandLine 'git', 'config', 'core.hooksPath', hooksFolder
}

check.dependsOn integrationTest